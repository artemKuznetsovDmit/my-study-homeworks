<?php

//Реализуйте программу для поиска файла в файловой системе (на диске компьютера). Чтобы не усложнять программу, будем искать только строгие совпадения имён: если ищем файл readme.txt, в результатах не будут отображаться файлы с именами __readme.txt, readme_new.txt, readme.html и так далее. Будем искать все вхождения: если у вас есть файлы с одинаковыми именами в разных папках, нужно вывести их все.
//
//Для успешной реализации программы вам потребуется познакомиться со встроенными функциями PHP для работы с файловой системой:
//
//функция scandir — возвращает содержимое папки (или директории — это синонимы) в виде массива имён файлов и папок;
//функция is_dir — возвращает true, если переданный путь — папка (директория).
//Файловая система имеет древовидную структуру — используйте рекурсию для реализации функции поиска.
//
//Задайте переменную $searchRoot, в которой будет содержаться папка (директория), с которой мы начинаем поиск, и $searchName с именем искомого файла.
$searchRoot;
$searchName;

//Задайте пустой массив $searchResult — в нём будут храниться результаты поиска.
$searchResult = [];

//Реализуйте рекурсивную функцию поиска файла. Мы ищем все совпадения имени файла, поэтому нужно обойти не только текущую папку, но и все её подпапки. Алгоритм поиска будет выглядеть следующим образом:
//у нас есть некая начальная папка и рекурсивная функция, которая принимает на вход три параметра: папку, в которой производится поиск;
//имя файла, который мы хотим найти;
//массив с результатами поиска (не забываем передать его по ссылке).
//С помощью функции scandir получаем список элементов текущей папки.
//Если элемент является папкой (директорией), то осуществляем поиск в ней: вызываем функцию поиска, в качестве параметра $searchRoot указываем текущую папку + имя папки, в которой будем искать.
//Если элемент является файлом — сравниваем с искомым именем файла. Если имя совпадает, сохраняем в массив полный путь к файлу (полный путь к папке — это первый параметр функции и непосредственно имя файла).
function search(string $searchRoot, string $searchName, &$searchResult)
{
    $list = scandir($searchRoot);
    foreach ($list as $listPart) {
        if (is_dir($listPart)) {
            search($searchRoot . '/' . $listPart, $searchName, $searchResult);
        } else {
            if ($listPart === $searchName) {
                $searchResult[] = $searchRoot . '/' . $searchName;
            }
        }
    }
}

//Организуйте вызов функции, передав ей в качестве параметров переменные $searchRoot, $searchName и $searchResult.
search('/home/artem/0', '21000BKC28112_1100_-002.jpg', $searchResult);

//После вызова функции позаботьтесь о выводе результата. Если массив $searchResult пустой, нужно вывести сообщение, что поиск не дал результатов. Если в массиве есть элементы — вывести их на экран.
if(isset($searchResult)){
    print_r($searchResult);
}else{
    echo 'Nothing found', PHP_EOL;
}

//В папке с вашей программой создайте подпапку, например test_search, положите в неё пустой файл test.txt, затем в ней же создайте ещё одну папку test_recursion и также положите в неё пустой файл test.txt.
//Выполните программу, передав ей в качестве параметра путь к папке test_search и имя файла test.txt. Если вы всё сделали правильно, то выведется путь к обоим файлам.
search('test_search', 'text.txt', $searchResult);


//Добавьте ещё одну подпаку в папку test_search и положите в подпапку файл с именем test.txt. Только на этот раз не пустой — пусть он содержит несколько произвольных строк текста.
//Добавьте в программу возможность фильтрации результатов поиска. Пусть нам нужно находить файлы, имеющие ненулевой размер.
//После вызова функции поиска, но до вывода массива searchResult на экран реализуйте фильтрацию. Используйте array_filter для фильтрации массива $searchResult и встроенную функцию filesize для проверки размера файла. Если вы всё сделали правильно, то в результате выполнения программа выведет одно имя файла.


$searchResult = array_filter($searchResult, filesize());
                              ###                    ^
                              ### Что сюда положить  |


if(isset($searchResult)){
    print_r($searchResult);
}else{
    echo 'Nothing found', PHP_EOL;
}

//Если всё работает правильно, сделайте коммит ваших изменений с помощью Git и отправьте коммит в репозиторий.
// -------------
